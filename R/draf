all_object_ids <- list_object_ids() 
batch_size <- 100
batched_ids <- split(all_object_ids, ceiling(seq_along(all_object_ids)/batch_size))

batched_ids <- sample(batched_ids, size = 100)

objects_response <-
  purrr::map(
    .progress = TRUE,
    batched_ids,
    \(ids, token) {
      # Collate the object id's to query and format them as expected for the API
      object_id_query <- glue::glue(
        "OBJECTID IN ({object_ids_collated})",
        object_ids_collated = glue::glue_collapse(ids, sep = ",")
      ) %>%
        curl::curl_escape()

      # Build request for the API
      objects_request <-
        httr2::request(
          "https://gis.oost-vlaanderen.be/server/rest/services/"
        ) %>%
        httr2::req_url_path_append(
          "RATO2",
          "RATO2_Dossiers_Publiek",
          "MapServer",
          "0",
          glue::glue("query?where={object_id_query}")
        ) %>%
        httr2::req_url_query(
          outFields = "*",
          f = "json",
          token = token
        )
    },
    token = get_token()
  ) |>
  purrr::map(~ httr2::req_throttle(.x, capacity = 500)) |>
  httr2::req_perform_parallel(progress = "{cli::pb_bar} {cli::pb_percent} | ETA: {cli::pb_eta}") |>
  purrr::map(httr2::resp_body_json)

compact2 <- function(.x, ...){
  if(is.list(.x)) {
    .x <- purrr::map(.x, compact2)
    purrr::compact(.x, ...)
  } else {
    .x
  }
}

tictoc::tic()
objects_response |>
  purrr::map(\(resp) {
    purrr::chuck(resp, "features") %>%
      purrr::map(~ purrr::pluck(.x, "attributes")) |> 
      purrr::map(~ purrr::discard(.x, is.null)) |>
      purrr::map(as.data.frame) |> 
      purrr::list_rbind() # batch size per df
  }) |> 
  purrr::list_rbind() |> # to one df
  dplyr::glimpse()
tictoc::toc()

tictoc::tic()
objects_response |>
  compact2() |>
  purrr::map(\(resp) {
    purrr::chuck(resp, "features") |>
      purrr::map(~ purrr::pluck(.x, "attributes")) |>
      purrr::map(dplyr::as_tibble) |>
      purrr::list_rbind()
  }) |>
  purrr::list_rbind()
tictoc::toc()

tictoc::tic(msg = "data.table, plucking shorthand")
objects_response |>
  purrr::map("features") |> 
  purrr::list_flatten(name_spec = "{inner}") |> 
  purrr::map("attributes") |>
  data.table::rbindlist(fill = TRUE) |> 
  dplyr::glimpse()
tictoc::toc()

tictoc::tic(msg = "dplyr pucking shorthand")
objects_response |>
  purrr::map("features") |> 
  purrr::list_flatten(name_spec = "{inner}") |> 
  purrr::map("attributes") |>
  purrr::map(~dplyr::as_tibble(purrr::compact(.x))) |> 
  purrr::list_rbind() |> 
  dplyr::glimpse()
tictoc::toc()
